{"version":3,"file":"static/js/67.53877039.chunk.js","mappings":"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","sources":["components/input/Input.jsx","components/contacts/Titles/Titles.styled.jsx","components/contacts/Titles/Titles.jsx","components/contacts/filter/filter.styled.jsx","components/contacts/filter/filter.jsx","components/contacts/Item/item.styled.jsx","components/contacts/Item/item.jsx","components/contacts/contactsList/contactsList.styled.jsx","components/contacts/contactsList/contactsList.jsx","pages/Contacts.js"],"sourcesContent":["import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport Notiflix from 'notiflix';\nimport { TextField, Button } from '@mui/material';\nconst schema = yup.object().shape({\n  name: yup.string().min(3).max(32).required(),\n\n  number: yup.string().min(3).max(14).required(),\n});\n\nexport const Input = () => {\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values, { resetForm }) => {\n      if (\n        contacts.find(\n          contact => contact.name.toLowerCase() === values.name.toLowerCase()\n        )\n      ) {\n      \n        return Notiflix.Notify.failure(`${values.name} is already in contacts`);\n      }\n      dispatch(addContact(values));\n      resetForm();\n    },\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit} style={{ marginBottom: '10px' }}>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n          sx={{ mb: 2 }}\n        />\n        <TextField\n          fullWidth\n          id=\"number\"\n          name=\"number\"\n          label=\"Number\"\n          type=\"number\"\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n          sx={{ mb: 2 }}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const MainTitle = styled.h1`\nposition:relative;\n  font-size: 44px;\n  font-weight: 700;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  text-align: center;\n  white-space: nowrap;\n  padding-bottom: 13px;\n\n  &:before {\n    background-color: #1976D2;\n    content: '';\n    display: block;\n    height: 3px;\n    width: 75px;\n    margin-bottom: 5px;\n  }\n\n  &:after {\n    background-color: #1976D2;\n    content: '';\n    display: block;\n  position:absolute; right:0; bottom:0;\n    height: 3px;\n    width: 75px;\n    margin-bottom: 0.25em;\n  }\n`;\n\nexport const Span = styled.span`\n\n color:  #1976D2;\n\n`\n","import { MainTitle, Span } from './Titles.styled';\n\nexport const Title = () => {\n  return (\n    <MainTitle>\n      Phonebo<Span>ok</Span>\n    </MainTitle>\n  );\n};\n","import styled from \"@emotion/styled\";\n\n\nexport const Wrapper = styled.div`\n\nwidth:100%;\n\n`\n\n\nexport const Input = styled.input`\n\nwidth: 100%;\npadding: 12px 20px;\nmargin: 8px 0;\ndisplay: inline-block;\nborder: 1px solid #ccc;\nborder-radius: 4px;\n box-sizing: border-box;\n\n`\n\nexport const Title = styled.h3`\n\ntext-align:center;\n\n\n`","import { useSelector } from \"react-redux\";\nimport {Input,Wrapper,Title} from './filter.styled';\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from \"redux/contacts/filterSlice\";\n\n\nexport const Filter = () => {\n\n  const dispatch = useDispatch();\n  const handleInputChange = e => dispatch(setFilter(e.target.value));\n\n  const filter = useSelector(selectFilter);\n  return (\n    <Wrapper>\n      <Title>Find contacts by name</Title>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Who are you looking for?..\"\n        value={filter}\n        onChange={handleInputChange}\n      />\n    </Wrapper>\n  );\n};\n\n","\nimport styled from \"@emotion/styled\";\n\nexport const Contact = styled.p`\n\nfont-size:16px;\nfont-weight: bold;\nflex: 2;\n`\n\nexport const Tel = Contact.withComponent('number');\n\nexport const Wrapper = styled.div`\n \ndisplay:flex;\ngap:10px;\nalign-items:center;\nflex: 1;\n`\n\n\nexport const Delete = styled.div`\n  \ncursor:pointer;\n\n`\n\nexport const Container = styled.div`\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%; /* Make sure the item takes up the full width */\n\n  }\n`;\n\n\n","import {Wrapper,Contact,Tel,Delete,Container} from \"./item.styled\"\nimport { AiFillDelete } from 'react-icons/ai';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from \"redux/contacts/operations\";\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\nexport const ItemContact = ({name,number,id}) => {\n\n  const dispatch = useDispatch();\n\n  const handleContactDelete = id => {\n\n    dispatch(deleteContact(id));\n  };\n\n return (\n   \n    <Container>\n<Wrapper>\n  <ContactPhoneIcon color='primary'/>\n  <Contact>{name}</Contact>\n</Wrapper>\n<Wrapper>\n<PhoneAndroidIcon color='primary'/>\n  <Tel>{number}</Tel>\n</Wrapper>\n<Delete role=\"button\" aria-label=\"Delete\" onClick={() => handleContactDelete(id)}>\n\n  <AiFillDelete size={20} />\n</Delete>\n</Container>\n)\n}\n\n","import styled from \"@emotion/styled\";\n\n\nexport const List = styled.ul`\n\nwidth:100%;\npadding-left:15px;\npadding-right:15px;\n\n`\n\nexport const Item = styled.li`\n\ndisplay:flex;\nalign-items:center;\njustify-content: space-between;\nmargin-bottom:10px;\n`\n\nexport const EmptyList = styled.p`\n\n font-size:20px;\n font-style: italic;\n\n\n`\n\n","import { ItemContact } from '../Item';\nimport { Item, EmptyList,List } from './contactsList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFiltredContacts } from 'redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const filtredContacts = useSelector(selectFiltredContacts);\n  const contacts = useSelector(selectContacts);\n  return (\n    <>\n      <List>\n        {contacts.length === 0 && (\n          <EmptyList>There aren't contacts yet. Let's add somebody.</EmptyList>\n        )}\n        {filtredContacts.length === 0 && contacts.length !== 0 && (<EmptyList>There aren't contacts containing this query</EmptyList>)}\n        {filtredContacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            <ItemContact name={name} number={number} id={id} />\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\n\n","\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Input } from 'components/input';\nimport { Title} from 'components/contacts/Titles';\nimport { Filter } from 'components/contacts/filter';\nimport { selectError, selectLoading } from 'redux/contacts/selectors';\nimport { ContactsList } from 'components/contacts/contactsList';\nimport { fetchContacts } from 'redux/contacts';\n\n\nconst Contacts = () => {\n\n      const dispatch = useDispatch();\n      const isLoading = useSelector(selectLoading);\n      const error = useSelector(selectError);\n\n      useEffect(() => {\n   \n        dispatch(fetchContacts())\n\n      },[dispatch])\n\n    return (\n        \n        <>\n      <Title/>     \n      <Input/>\n      <Filter />\n      {isLoading && <p>Loading contacts...</p> }\n      {error && <p>{error}</p>}\n      <ContactsList/>\n        </>\n    )\n}\n\nexport default Contacts;\n\n"],"names":["schema","yup","shape","name","min","max","required","number","Input","dispatch","useDispatch","contacts","useSelector","selectContacts","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","find","contact","toLowerCase","Notiflix","addContact","handleSubmit","style","marginBottom","TextField","fullWidth","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","sx","mb","type","Button","color","variant","MainTitle","styled","Span","Title","Wrapper","Filter","filter","selectFilter","placeholder","e","setFilter","target","Contact","Tel","withComponent","Delete","Container","ItemContact","ContactPhone","PhoneAndroid","role","onClick","deleteContact","handleContactDelete","size","List","Item","EmptyList","ContactsList","filtredContacts","selectFiltredContacts","length","map","isLoading","selectLoading","selectError","useEffect","fetchContacts"],"sourceRoot":""}